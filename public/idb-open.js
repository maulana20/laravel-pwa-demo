const objtb=idb.open("laravel-pwa-demo",1,(t=>{t.objectStoreNames.contains("product")||t.createObjectStore("product")}));class idbTable{constructor(t){this.table_name=t}getAll(){return objtb.then((t=>t.transaction(this.table_name).objectStore(this.table_name).getAll()))}count(){return objtb.then((t=>t.transaction(this.table_name).objectStore(this.table_name).count()))}set(t,e){return objtb.then((n=>{const o=n.transaction(this.table_name,"readwrite");return o.objectStore(this.table_name).put(e,t),o.complete}))}delete(t){return objtb.then((e=>{const n=e.transaction(this.table_name,"readwrite");return n.objectStore(this.table_name).delete(t),n.complete}))}}const saveProduct=function(t){console.log("processing id "+t.id);var e=JSON.stringify({id:t.id,name:t.name,category:t.category});fetch("/api/product",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:e}).then((function(e){const n=e.headers.get("content-type");n&&-1!==n.indexOf("application/json")?e.json().then((function(e){1==e.success&&(console.log("deleting id "+t.id),new idbTable("product").delete(t.id))})):console.log("response not json")})).catch((function(t){console.log("error "+t)}))};
